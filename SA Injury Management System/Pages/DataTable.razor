@page "/DataTable"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using SA_Injury_Management_System.Models

@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IInjuryData _db 

<!--https://joshclose.github.io/CsvHelper/examples/writing/write-anonymous-type-objects/
    https://www.youtube.com/watch?v=d6R3dvJUnXo-->
<h3>Database records:</h3>

@if (injuryDataUID == null && injuryDataNOI == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary" @onclick="DonwloadXslFile">Download Database</button>

    <TableComponent Item="injuryDataUID" Context="contextModel">
        <TableHeader>
            <th scope="row">ID</th>
            <th>Name</th>
            <th scope="col">Date Of Birth</th>
            <th scope="col">Sex</th>
            <th scope="col">Date Of Injury</th>
        </TableHeader>
        <RowTemplate>
            <th scope="row">@contextModel.ID</th>
            <td>@contextModel.Name</td>
            <td>@contextModel.DOB.ToString("MM/dd/yyyy")</td>
            <td>@contextModel.Sex</td>
            <td>@contextModel.Date_of_Injury.ToString("MM/dd/yyyy")</td>
            <td><button class="btn btn-primary" @onclick="@(() => IdClicked(contextModel.ID))">View</button></td>
        </RowTemplate>
    </TableComponent>
}

@code {

    List<UniqueIdentifiers_Model> injuryDataUID;
    List<NatureOfInjury_Model> injuryDataNOI;

    UniqueIdentifiers_BModel contextModel = new UniqueIdentifiers_BModel();

    protected override async Task OnInitializedAsync()
    {
        injuryDataUID = await _db.GetGeneralInjuryInfo();
        injuryDataNOI = await _db.GetNatureOfInjuryInfo();


    }

    protected void DonwloadXslFile()
    {
        
    }

    protected void IdClicked(int id)
    {
        navigationManager.NavigateTo("/DataTable/" + id);
    }
}
